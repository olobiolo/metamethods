% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/data.frame__to__grouped_df.R
\name{data.frame__to__grouped_df}
\alias{data.frame__to__grouped_df}
\title{create S3 method for class \code{grouped_df}}
\usage{
data.frame__to__grouped_df(fun)
}
\arguments{
\item{fun}{a function; this must be an S3 method for class \code{data.frame};
also, its first argument must be named \code{x}}
}
\value{
a function: a method for class \code{grouped_df} (from package \code{dplyr})
}
\description{
Given an S3 method for class \code{data.frame}, create an S3 method
for class \code{grouped_df} for the same generic function.
}
\details{
This is a utility function for writing packages.
Functions that modify data frames by replacing or adding columns may fail
on grouped data frames so the class will require a dedicated method.
This is a generalized constructor of such methods.

In all cases the original call to \code{foo} is captured with \code{match.call}
and reconstructed into a call to \code{by}. The first argument of \code{foo},
which must be named \code{x}, is passed to the \code{data} argument of the new call.
Grouping variables are isolated as a list and passed to the \code{INDICES} argument.
The \code{FUN} argument is set to \code{foo.data.frame},
i.e. the \code{x} of \bold{this} function.
The remaining arguments are passed as is.
The resulting object of class \code{by} is converted to a list and \code{unsplit}
back into a data frame.
}
\section{How to use}{

When editing an .R file for generic \code{foo} and its S3 methods,
simply add another entry where \code{foo.grouped_df} is defined as the result of
\code{data.frame__to__grouped_df} acting on \code{foo.data.frame}.

Copy the following \code{roxygen} tag before the function definition
to have it show up nicely in the documentation file:

\code{@describeIn foo see \\code{\\link[metamethods]{data.frame__to__grouped_df}}}
}

